{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///Library.min.js","webpack:///webpack/bootstrap 1fcb4cd2de94b3e8b920","webpack:///D:/1 - CORTANA/3 - Projects/18 - Coding/src/Web/Challenges/nexogen/project/code/build/src/index.js","webpack:///D:/1 - CORTANA/3 - Projects/18 - Coding/src/Web/Challenges/nexogen/project/code/build/src/helpers.js","webpack:///D:/1 - CORTANA/3 - Projects/18 - Coding/src/Web/Challenges/nexogen/project/code/build/src/loggers/consoleLogger.js","webpack:///D:/1 - CORTANA/3 - Projects/18 - Coding/src/Web/Challenges/nexogen/project/code/build/src/loggers/fileLogger.js","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///D:/1 - CORTANA/3 - Projects/18 - Coding/src/Web/Challenges/nexogen/project/code/build/src/loggers/streamLogger.js","webpack:///external \"stream\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_7__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_helpers","_helpers2","_consoleLogger","_consoleLogger2","_fileLogger","_fileLogger2","_streamLogger","_streamLogger2","logger","log","input","callback","messageContent","messageLevel","messageOutput","processedPackage","messageLengthIsValid","validate","messageLength","error","formattedMessage","format","message","environment","messageLocationPath","filterSpecificFirstChar","filterSpecificLastChar","index","check","stringInBytes","str","s","length","i","code","charCodeAt","prependZeroForSingles","item","toString","date","currentDate","Date","day","getDate","month","getMonth","year","getFullYear","dateString","time","currentTime","hour","getHours","min","getMinutes","sec","getSeconds","timeString","isBrowser","window","e","isNode","process","versions","node","timeAndDate","charFilter","charAt","slice","throw","result","styledMessageContent","console","debug","info","fs","path","wrapLineBreak","platform","writeFile","writePath","err","appendFile","messageLocationLookIn","messageInBytes","existsSync","mkdirSync","fileArray","readdirSync","logArray","extname","includes","push","logsAmount","logFileExtention","baseFileName","baseLogPath","newlyArchivedLogNumber","newlyArchivedLogFileName","newlyArchivedFileLogPath","messageWithLineBreak","fileStats","statSync","fileSizeInBytes","mutationStream","createReadStream","pipe","createWriteStream","streamHadError","on","Error","loggedPath","Readable","messageSourceStream","readStream"],"mappings":"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","file":"Library.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"fs\"), require(\"path\"), require(\"stream\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Library\", [\"fs\", \"path\", \"stream\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Library\"] = factory(require(\"fs\"), require(\"path\"), require(\"stream\"));\n\telse\n\t\troot[\"Library\"] = factory(root[\"fs\"], root[\"path\"], root[\"stream\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"fs\"), require(\"path\"), require(\"stream\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Library\", [\"fs\", \"path\", \"stream\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Library\"] = factory(require(\"fs\"), require(\"path\"), require(\"stream\"));\n\telse\n\t\troot[\"Library\"] = factory(root[\"fs\"], root[\"path\"], root[\"stream\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _helpers = __webpack_require__(1);\n\t\n\tvar _helpers2 = _interopRequireDefault(_helpers);\n\t\n\tvar _consoleLogger = __webpack_require__(2);\n\t\n\tvar _consoleLogger2 = _interopRequireDefault(_consoleLogger);\n\t\n\tvar _fileLogger = __webpack_require__(3);\n\t\n\tvar _fileLogger2 = _interopRequireDefault(_fileLogger);\n\t\n\tvar _streamLogger = __webpack_require__(6);\n\t\n\tvar _streamLogger2 = _interopRequireDefault(_streamLogger);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// helpers libraries\n\t//const fs = require('fs');\n\t\n\t\n\t/**\r\n\t * { Function }\r\n\t */\n\t/*******************************\r\n\t * [_index.js]\r\n\t * Define the base logger code here\r\n\t ******************************/\n\t/**\r\n\t* { Dependencies }\r\n\t*/\n\t\n\t// General helpers\n\t//import mutationHelpers from './mutation';\n\tvar logger = function () {\n\t\n\t\t/**\r\n\t * { Main function }\r\n\t * Functions to log the message\r\n\t */\n\t\t/*\r\n\t  * { Primer }\r\n\t  * ..\r\n\t  */\n\t\n\t\tvar log = function log(input, callback) {\n\t\n\t\t\tvar messageContent = input.messageContent,\n\t\t\t    messageLevel = input.messageLevel,\n\t\t\t    messageOutput = input.messageOutput,\n\t\t\t    processedPackage = input;\n\t\n\t\t\t// Preprocessing\n\t\t\tvar messageLengthIsValid = _helpers2.default.validate.messageLength(messageContent);\n\t\n\t\t\tmessageLengthIsValid ? ' ' : _helpers2.default.error.throw('Message is too long!');\n\t\n\t\t\tvar formattedMessage = _helpers2.default.format.message(messageContent, messageLevel);\n\t\n\t\t\tprocessedPackage.messageContent = formattedMessage;\n\t\n\t\t\t// Talk to a logger based on the output type\n\t\t\tswitch (messageOutput) {\n\t\t\t\tcase 'console':\n\t\t\t\t\t{\n\t\t\t\t\t\t// code block for console logging\n\t\t\t\t\t\t_consoleLogger2.default.log(formattedMessage, messageLevel, callback);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'file':\n\t\t\t\t\t{\n\t\t\t\t\t\t// code block for file logging\n\t\t\t\t\t\t// cannot run in the browser, so validate environement\n\t\t\t\t\t\tvar environment = _helpers2.default.validate.environment();\n\t\n\t\t\t\t\t\t// Filter a slash if it exists at char location 0 or last\n\t\t\t\t\t\tif (input.messageLocationPath) {\n\t\t\t\t\t\t\tinput.messageLocationPath = _helpers2.default.format.filterSpecificFirstChar(input.messageLocationPath, '/');\n\t\t\t\t\t\t\tinput.messageLocationPath = _helpers2.default.format.filterSpecificLastChar(input.messageLocationPath, '/');\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tenvironment === 'node' ? _fileLogger2.default.log(processedPackage, callback) : _helpers2.default.error.throw('Log to file has to be called processed by Node.JS');\n\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'stream':\n\t\t\t\t\t{\n\t\t\t\t\t\t// code block for stream logging\n\t\t\t\t\t\t_streamLogger2.default.log(processedPackage, callback);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\t{\n\t\t\t\t\t\t//console.log('Sorry, the logger did not recognise this messageOutput');\n\t\t\t\t\t\tcallback ? callback('Sorry, the logger did not recognise this messageOutput') : ' ';\n\t\t\t\t\t\t_helpers2.default.error.throw('Sorry, the logger did not recognise this messageOutput');\n\t\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\treturn {\n\t\t\tlog: log\n\t\t};\n\t}();\n\t\n\texports.default = logger;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/*******************************\r\n\t * [_helpers.js]\r\n\t * Define the main helpers for the logging\r\n\t ******************************/\n\t\n\t/**\r\n\t * { Dependencies }\r\n\t */\n\t\n\t/**\r\n\t* { Function }\r\n\t*/\n\tvar index = function () {\n\t\n\t\t/**\r\n\t  * { Check }\r\n\t  * Support helpers to well...check things.\r\n\t */\n\t\tvar check = {\n\t\t\tstringInBytes: function stringInBytes(str) {\n\t\t\t\t// returns the byte length of an utf8 string\n\t\t\t\tvar s = str.length;\n\t\n\t\t\t\tfor (var i = str.length - 1; i >= 0; i--) {\n\t\t\t\t\tvar code = str.charCodeAt(i);\n\t\n\t\t\t\t\tif (code > 0x7f && code <= 0x7ff) s++;else if (code > 0x7ff && code <= 0xffff) s += 2;\n\t\t\t\t\tif (code >= 0xDC00 && code <= 0xDFFF) i--; // trail surrogate\n\t\t\t\t}\n\t\t\t\treturn s;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\r\n\t  * { Define }\r\n\t  * Support helpers to define elements such as date, time.\r\n\t */\n\t\tvar define = {\n\t\t\t// Adding a 0 in front of single characters looks better in the log.\n\t\t\tprependZeroForSingles: function prependZeroForSingles(item) {\n\t\t\t\tif (item.length === 1) {\n\t\t\t\t\treturn '0' + item.toString();\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t},\n\t\n\t\t\tdate: function date() {\n\t\n\t\t\t\tvar currentDate = new Date();\n\t\n\t\t\t\tvar day = define.prependZeroForSingles(currentDate.getDate().toString()),\n\t\t\t\t    // Get current date\n\t\t\t\tmonth = define.prependZeroForSingles((currentDate.getMonth() + 1).toString()),\n\t\t\t\t    // Current month\n\t\t\t\tyear = currentDate.getFullYear();\n\t\n\t\t\t\tvar dateString = day + '/' + month + '/' + year;\n\t\n\t\t\t\treturn dateString;\n\t\t\t},\n\t\n\t\t\ttime: function time() {\n\t\t\t\t// Adding a 0 in front of single characters looks better in the log..\n\t\t\t\tvar currentTime = new Date();\n\t\n\t\t\t\tvar hour = define.prependZeroForSingles(currentTime.getHours().toString()),\n\t\t\t\t    min = define.prependZeroForSingles(currentTime.getMinutes().toString()),\n\t\t\t\t    sec = define.prependZeroForSingles(currentTime.getSeconds().toString());\n\t\n\t\t\t\tvar timeString = hour + ':' + min + ':' + sec;\n\t\n\t\t\t\treturn timeString;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\r\n\t  * { Validate }\r\n\t  * Support helpers to validate things such as message length and the environment\r\n\t */\n\t\tvar validate = {\n\t\t\tmessageLength: function messageLength(messageContent) {\n\t\n\t\t\t\t// Prevent numbers from causing errors, convert to string.\n\t\t\t\tif (typeof messageContent === 'number') {\n\t\t\t\t\tmessageContent = messageContent.toString();\n\t\t\t\t}\n\t\n\t\t\t\tvar messageLength = messageContent.length;\n\t\n\t\t\t\t// Return true (valid) if the length is <= 1000\n\t\t\t\treturn messageLength <= 1000 == true;\n\t\t\t},\n\t\n\t\t\tenvironment: function environment() {\n\t\t\t\t//Check if it is running in node.js or the browser\n\t\t\t\tvar isBrowser = function isBrowser() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn this === window;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\tvar isNode = function isNode() {\n\t\t\t\t\tif (process.versions.node != 'undefined') {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\n\t\t\t\tif (isBrowser()) {\n\t\t\t\t\treturn 'browser';\n\t\t\t\t} else if (isNode()) {\n\t\t\t\t\treturn 'node';\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\n\t\t/**\r\n\t  * { Format }\r\n\t  * Support helpers to format the message\r\n\t */\n\t\tvar format = {\n\t\t\tmessage: function message(messageContent, messageLevel) {\n\t\t\t\tvar timeAndDate = define.date() + ' - ' + define.time();\n\t\n\t\t\t\t// Format #{LogTime} [#{LogLevel}] #{LogMessage}\n\t\t\t\tvar formattedMessage = void 0;\n\t\n\t\t\t\tformattedMessage = '#' + '{' + timeAndDate + '}' + ' ';\n\t\t\t\tformattedMessage = formattedMessage + '[' + '#' + '{' + messageLevel + '}' + ']' + ' ';\n\t\t\t\tformattedMessage = formattedMessage + '#' + '{' + messageContent + '}';\n\t\n\t\t\t\treturn formattedMessage;\n\t\t\t},\n\t\n\t\t\tfilterSpecificFirstChar: function filterSpecificFirstChar(input, charFilter) {\n\t\t\t\tif (input.charAt(0) === charFilter) {\n\t\t\t\t\tinput = input.slice(1, input.length);\n\t\t\t\t}\n\t\t\t\treturn input;\n\t\t\t},\n\t\n\t\t\tfilterSpecificLastChar: function filterSpecificLastChar(input, charFilter) {\n\t\t\t\tif (input.charAt(input.length - 1) === charFilter) {\n\t\t\t\t\tinput = input.slice(0, input.length - 1);\n\t\t\t\t}\n\t\t\t\treturn input;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\r\n\t  * { Errors }\r\n\t  * Support helpers for error handling\r\n\t */\n\t\tvar error = {\n\t\t\tthrow: function _throw(message) {\n\t\t\t\tthrow message;\n\t\t\t}\n\t\t};\n\t\n\t\treturn {\n\t\t\tcheck: check,\n\t\t\tdefine: define,\n\t\t\tvalidate: validate,\n\t\t\tformat: format,\n\t\t\terror: error\n\t\t};\n\t}();\n\t\n\t/**\r\n\t* Export\r\n\t*/\n\tmodule.exports = index;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _helpers = __webpack_require__(1);\n\t\n\tvar _helpers2 = _interopRequireDefault(_helpers);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\r\n\t* { Function }\r\n\t*/\n\tvar index = function () {\n\t\n\t\t/**\r\n\t  * { Log }\r\n\t  * Log it with console.log\r\n\t */\n\t\n\t\tvar log = function log(messageContent, messageLevel, callback) {\n\t\n\t\t\tvar result = {\n\t\t\t\tmessageContent: messageContent\n\t\t\t};\n\t\n\t\t\t// Add colours\n\t\t\tvar styledMessageContent = '%c' + messageContent;\n\t\n\t\t\tswitch (messageLevel) {\n\t\t\t\tcase 'debug':\n\t\t\t\t\tconsole.debug(styledMessageContent, 'color: grey');\n\t\n\t\t\t\t\tcallback ? callback(result) : ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'info':\n\t\t\t\t\tconsole.info(styledMessageContent, 'color: green');\n\t\n\t\t\t\t\tcallback ? callback(result) : ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'error':\n\t\t\t\t\tconsole.error(styledMessageContent, 'color: red');\n\t\n\t\t\t\t\tcallback ? callback(result) : ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t//console.log('Sorry, the logger did not recognise this messageLevel for the console.log messageOutput');\n\t\n\t\t\t\t\tcallback ? callback('Sorry, the logger did not recognise this messageLevel in the console.log messageOutput type') : ' ';\n\t\t\t\t\t_helpers2.default.error.throw('Sorry, the logger did not recognise this messageLevel in the console.log messageOutput type');\n\t\t\t}\n\t\t};\n\t\n\t\treturn {\n\t\t\tlog: log\n\t\t};\n\t}();\n\t\n\t/**\r\n\t* Export\r\n\t*/\n\t/*******************************\r\n\t * [_consoleLogger.js]\r\n\t * Define the consoleLogger function\r\n\t ******************************/\n\t\n\t/**\r\n\t * { Dependencies }\r\n\t */\n\tmodule.exports = index;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _helpers = __webpack_require__(1);\n\t\n\tvar _helpers2 = _interopRequireDefault(_helpers);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar fs = __webpack_require__(4); /*******************************\r\n\t                         * [_consoleLogger.js]\r\n\t                         * Define the consoleLogger function\r\n\t                         ******************************/\n\t\n\t/**\r\n\t * { Dependencies }\r\n\t */\n\t\n\tvar path = __webpack_require__(5);\n\t\n\t/**\r\n\t* { Function }\r\n\t*/\n\tvar index = function () {\n\t\n\t\t/**\r\n\t  * { Log }\r\n\t  * Log a file with fs\r\n\t */\n\t\n\t\tvar log = function log(input, callback) {\n\t\n\t\t\t// Support functions\n\t\n\t\t\t// Linebreak\n\t\t\tvar wrapLineBreak = function wrapLineBreak(input) {\n\t\t\t\t// Add a line break based on the OS (encoding is different on UNIX vs Windows)\n\t\t\t\tif (process.platform === 'win32') {\n\t\t\t\t\treturn input + '\\r\\n';\n\t\t\t\t}\n\t\n\t\t\t\treturn input + '\\n';\n\t\t\t};\n\t\n\t\t\t// Function to write file\n\t\t\tvar writeFile = function writeFile(writePath, messageContent) {\n\t\t\t\tfs.writeFile(writePath, messageContent, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn console.log(err);\n\t\t\t\t\t}\n\t\n\t\t\t\t\t//console.log('A new log file was saved!');\n\t\t\t\t\t//console.log(writePath, messageContent);\n\t\t\t\t});\n\t\t\t};\n\t\n\t\t\t// Append to file\n\t\t\tvar appendFile = function appendFile(writePath, messageContent) {\n\t\t\t\tfs.appendFile(writePath, messageContent, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn console.log(err);\n\t\t\t\t\t}\n\t\n\t\t\t\t\t//console.log('The log file was appended!');\n\t\t\t\t\t//console.log(writePath, messageContent);\n\t\t\t\t});\n\t\t\t};\n\t\n\t\t\t// Definitions\n\t\t\tvar messageContent = input.messageContent,\n\t\t\t    messageLocationLookIn = input.messageLocationLookIn,\n\t\t\t    messageInBytes = _helpers2.default.check.stringInBytes(messageContent);\n\t\n\t\t\tvar writePath = void 0,\n\t\t\t    messageLocationPath = void 0;\n\t\n\t\t\tif (input.messageLocationPath) {\n\t\t\t\tmessageLocationPath = input.messageLocationPath + '/';\n\t\t\t} else {\n\t\t\t\tmessageLocationPath = '';\n\t\t\t}\n\t\n\t\t\t// Define LookIn (path base) and add subpath\n\t\t\tif (messageLocationLookIn == 'driveRoot') {\n\t\t\t\twritePath = '/';\n\t\n\t\t\t\tif (messageLocationPath != 'undefined') {\n\t\t\t\t\twritePath = writePath + messageLocationPath;\n\t\t\t\t}\n\t\t\t} else if (messageLocationLookIn == 'projectRoot') {\n\t\t\t\twritePath = './';\n\t\n\t\t\t\tif (messageLocationPath != 'undefined') {\n\t\t\t\t\twritePath = writePath + messageLocationPath;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Check if the folder exists\n\t\t\tif (!fs.existsSync(writePath)) {\n\t\t\t\tfs.mkdirSync(writePath);\n\t\t\t}\n\t\n\t\t\t// Add a name to the logFile\n\t\t\t// First an inventory check, get a list of the current log files\n\t\t\t//let fileArray = fs.readdirSync(writePath, ['**.txt']),\n\t\n\t\t\tvar fileArray = fs.readdirSync(writePath),\n\t\t\t    logArray = [];\n\t\n\t\t\t// Take only files that are log files\n\t\t\tfor (var i in fileArray) {\n\t\t\t\tif (path.extname(fileArray[i]) === '.txt' && fileArray[i].includes('log')) {\n\t\t\t\t\tlogArray.push(fileArray[i]);\n\t\t\t\t\t//console.log('I am copying to the logArray: ', fileArray[i]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Define the total\n\t\t\tvar logsAmount = logArray.length;\n\t\n\t\t\t// Define a base file to verify the size of the mostRecentFile\n\t\t\tvar logFileExtention = '.txt',\n\t\n\t\t\t//mostRecentArchivedLogPath,\n\t\t\tbaseFileName = 'log' + logFileExtention,\n\t\t\t    baseLogPath = writePath + baseFileName,\n\t\t\t    newlyArchivedLogNumber = logsAmount + 1,\n\t\t\t    newlyArchivedLogFileName = 'log' + '.' + newlyArchivedLogNumber + logFileExtention,\n\t\t\t    newlyArchivedFileLogPath = writePath + newlyArchivedLogFileName,\n\t\t\t    messageWithLineBreak = wrapLineBreak(messageContent);\n\t\n\t\t\t// Is there a mostRecentFile or is this the first item?\n\t\t\tif (logsAmount != 0) {\n\t\t\t\tvar fileStats = fs.statSync(baseLogPath),\n\t\t\t\t    fileSizeInBytes = fileStats['size'];\n\t\n\t\t\t\t//console.log(fileSizeInBytes, messageInBytes);\n\t\t\t\t// Is the last log file still within 5000 bytes if I add this new logMessage?\n\t\t\t\tif (fileSizeInBytes + messageInBytes < 200) {\n\t\t\t\t\t// Append to file\n\t\t\t\t\tappendFile(baseLogPath, messageWithLineBreak);\n\t\t\t\t} else {\n\t\t\t\t\t(function () {\n\t\t\t\t\t\t// Rename the original log file to log.{incrementnumber}\n\t\t\t\t\t\tvar mutationStream = fs.createReadStream(baseLogPath);\n\t\n\t\t\t\t\t\tmutationStream.pipe(fs.createWriteStream(newlyArchivedFileLogPath));\n\t\n\t\t\t\t\t\tvar streamHadError = false;\n\t\n\t\t\t\t\t\tmutationStream.on('error', function (err) {\n\t\t\t\t\t\t\tstreamHadError = true;\n\t\t\t\t\t\t\tthrow new Error('Log renaming failed! ' + err);\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t// Now create a new log file\n\t\t\t\t\t\tmutationStream.on('close', function () {\n\t\t\t\t\t\t\tif (!streamHadError) {\n\t\t\t\t\t\t\t\t// Make a new base log file\n\t\t\t\t\t\t\t\twriteFile(baseLogPath, messageWithLineBreak);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t})();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Define path for the first file\n\t\t\t\twriteFile(baseLogPath, messageWithLineBreak);\n\t\t\t}\n\t\n\t\t\t// Callback\n\t\t\tvar loggedPath = baseLogPath;\n\t\n\t\t\tif (loggedPath.charAt(0) === '.') {\n\t\t\t\tloggedPath = loggedPath.slice(1, loggedPath.length);\n\t\t\t}\n\t\n\t\t\t// Define the result for the callback\n\t\t\tloggedPath = messageLocationLookIn + loggedPath;\n\t\n\t\t\tvar result = {\n\t\t\t\tmessageContent: messageContent,\n\t\t\t\twritePath: loggedPath\n\t\t\t};\n\t\n\t\t\tcallback ? callback(result) : ' ';\n\t\t};\n\t\n\t\treturn {\n\t\t\tlog: log\n\t\t};\n\t}();\n\t\n\t/**\r\n\t* Export\r\n\t*/\n\tmodule.exports = index;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"fs\");\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"path\");\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*******************************\r\n\t * [_streamLogger.js]\r\n\t * Define the streamLogger function\r\n\t ******************************/\n\t\n\t/**\r\n\t * { Dependencies }\r\n\t */\n\tvar Readable = __webpack_require__(7).Readable;\n\t\n\t/**\r\n\t* { Function }\r\n\t*/\n\tvar index = function () {\n\t\n\t\t/**\r\n\t  * { Log }\r\n\t  * Log it to a sourceStream via a pipe action\r\n\t */\n\t\n\t\t// Stream Logger\n\t\tvar log = function log(input, callback) {\n\t\n\t\t\t// Support functions\n\t\t\t// sparkles\n\t\n\t\t\t// Definitions\n\t\t\tvar messageContent = input.messageContent,\n\t\t\t    messageSourceStream = input.messageSourceStream;\n\t\n\t\t\t// Set up the read stream\n\t\t\tvar readStream = new Readable();\n\t\n\t\t\t// Push & Pipe\n\t\t\treadStream.push(messageContent);\n\t\t\treadStream.push(null);\n\t\t\treadStream.pipe(messageSourceStream);\n\t\n\t\t\t// Callback\n\t\t\tvar result = {\n\t\t\t\tmessageContent: messageContent\n\t\t\t};\n\t\n\t\t\tcallback ? callback(result) : ' ';\n\t\t};\n\t\n\t\treturn {\n\t\t\tlog: log\n\t\t};\n\t}();\n\t\n\t/**\r\n\t* Export\r\n\t*/\n\tmodule.exports = index;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"stream\");\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** Library.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1fcb4cd2de94b3e8b920\n **/","/*******************************\r\n * [_index.js]\r\n * Define the base logger code here\r\n ******************************/\r\n /**\r\n * { Dependencies }\r\n */\r\n\r\n// General helpers\r\n//import mutationHelpers from './mutation';\r\nimport helpers from './helpers';\r\nimport consoleLogger from './loggers/consoleLogger';\r\nimport fileLogger from './loggers/fileLogger';\r\nimport streamLogger from './loggers/streamLogger';\r\n\r\n// helpers libraries\r\n//const fs = require('fs');\r\n\r\n\r\n/**\r\n * { Function }\r\n */\r\nconst logger = (function () {\r\n\r\n\t/**\r\n\t* { Main function }\r\n\t* Functions to log the message\r\n\t*/\r\n\t\t/*\r\n\t\t * { Primer }\r\n\t\t * ..\r\n\t\t */\r\n\r\n\t\tconst log = (input, callback) => {\r\n\r\n\t\t\tconst messageContent = input.messageContent,\r\n\t\t\t\t\t\tmessageLevel = input.messageLevel,\r\n\t\t\t\t\t\tmessageOutput = input.messageOutput,\r\n\t\t\t\t\t\tprocessedPackage = input;\r\n\r\n\t\t\t// Preprocessing\r\n\t\t\tconst messageLengthIsValid = helpers.validate.messageLength(messageContent);\r\n\r\n\t\t\tmessageLengthIsValid ? ' ' : helpers.error.throw('Message is too long!');\r\n\r\n\t\t\tconst formattedMessage = helpers.format.message(messageContent, messageLevel);\r\n\r\n\t\t\tprocessedPackage.messageContent = formattedMessage;\r\n\r\n\t\t\t// Talk to a logger based on the output type\r\n\t\t\tswitch (messageOutput) {\r\n\t\t\t\tcase 'console': {\r\n\t\t\t\t\t// code block for console logging\r\n\t\t\t\t\tconsoleLogger.log(formattedMessage, messageLevel, callback);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'file': {\r\n\t\t\t\t\t// code block for file logging\r\n\t\t\t\t\t// cannot run in the browser, so validate environement\r\n\t\t\t\t\tconst environment = helpers.validate.environment();\r\n\r\n\t\t\t\t\t// Filter a slash if it exists at char location 0 or last\r\n\t\t\t\t\tif (input.messageLocationPath){\r\n\t\t\t\t\t\tinput.messageLocationPath = helpers.format.filterSpecificFirstChar(input.messageLocationPath, '/');\r\n\t\t\t\t\t\tinput.messageLocationPath = helpers.format.filterSpecificLastChar(input.messageLocationPath, '/');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tenvironment === 'node' ?\r\n\t\t\t\t\tfileLogger.log(processedPackage, callback) :\r\n\t\t\t\t\thelpers.error.throw('Log to file has to be called processed by Node.JS');\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'stream': {\r\n\t\t\t\t\t// code block for stream logging\r\n\t\t\t\t\tstreamLogger.log(processedPackage, callback);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tdefault: {\r\n\t\t\t\t\t//console.log('Sorry, the logger did not recognise this messageOutput');\r\n\t\t\t\t\tcallback ? callback('Sorry, the logger did not recognise this messageOutput') : ' ';\r\n\t\t\t\t\thelpers.error.throw('Sorry, the logger did not recognise this messageOutput');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn {\r\n\t\t\tlog : log\r\n\t\t};\r\n})();\r\n\r\nexport default logger;\r\n\n\n\n/** WEBPACK FOOTER **\n ** D:/1 - CORTANA/3 - Projects/18 - Coding/src/Web/Challenges/nexogen/project/code/build/src/index.js\n **/","/*******************************\r\n * [_helpers.js]\r\n * Define the main helpers for the logging\r\n ******************************/\r\n\r\n/**\r\n * { Dependencies }\r\n */\r\n\r\n /**\r\n * { Function }\r\n */\r\n const index = (function () {\r\n\r\n\t/**\r\n\t * { Check }\r\n\t * Support helpers to well...check things.\r\n\t*/\r\n\tconst check = {\r\n\t\tstringInBytes : function (str) {\r\n\t\t\t// returns the byte length of an utf8 string\r\n\t\t\tlet s = str.length;\r\n\r\n\t\t\tfor (let i = str.length - 1; i >= 0; i--) {\r\n\t\t\t\tconst code = str.charCodeAt(i);\r\n\r\n\t\t\t\tif (code > 0x7f && code <= 0x7ff) s++;\r\n\t\t\t\telse if (code > 0x7ff && code <= 0xffff) s += 2;\r\n\t\t\t\tif (code >= 0xDC00 && code <= 0xDFFF) i--; // trail surrogate\r\n\t\t\t}\r\n\t\t\treturn s;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * { Define }\r\n\t * Support helpers to define elements such as date, time.\r\n\t*/\r\n\tconst define = {\r\n\t\t// Adding a 0 in front of single characters looks better in the log.\r\n\t\tprependZeroForSingles : function (item) {\r\n\t\t\tif (item.length === 1) {\r\n\t\t\t\treturn ('0' + item.toString());\r\n\t\t\t}\r\n\t\t\treturn item;\r\n\t\t},\r\n\r\n\t\tdate : function () {\r\n\r\n\t\t\tconst currentDate = new Date();\r\n\r\n\t\t\tlet day = define.prependZeroForSingles(currentDate.getDate().toString()),     // Get current date\r\n\t\t\t\t\t\tmonth = define.prependZeroForSingles((currentDate.getMonth() + 1).toString()),  // Current month\r\n\t\t\t\t\t\tyear = currentDate.getFullYear();\r\n\r\n\r\n\t\t\tconst dateString = day + '/' + month + '/' + year;\r\n\r\n\t\t\treturn dateString;\r\n\t\t},\r\n\r\n\t\ttime : function () {\r\n\t\t\t// Adding a 0 in front of single characters looks better in the log..\r\n\t\t\tconst currentTime = new Date();\r\n\r\n\t\t\tlet hour = define.prependZeroForSingles(currentTime.getHours().toString()),\r\n\t\t\t\tmin = define.prependZeroForSingles(currentTime.getMinutes().toString()),\r\n\t\t\t\tsec = define.prependZeroForSingles(currentTime.getSeconds().toString());\r\n\r\n\t\t\tconst timeString = hour + ':' + min + ':' + sec;\r\n\r\n\t\t\treturn timeString;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * { Validate }\r\n\t * Support helpers to validate things such as message length and the environment\r\n\t*/\r\n\tconst validate = {\r\n\t\tmessageLength : function (messageContent) {\r\n\r\n\t\t\t// Prevent numbers from causing errors, convert to string.\r\n\t\t\tif (typeof messageContent === 'number') {\r\n\t\t\t\tmessageContent = messageContent.toString();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst messageLength = messageContent.length;\r\n\r\n\t\t\t// Return true (valid) if the length is <= 1000\r\n\t\t\treturn messageLength <= 1000 == true;\r\n\t\t},\r\n\r\n\t\tenvironment : function () {\r\n\t\t\t//Check if it is running in node.js or the browser\r\n\t\t\tconst isBrowser = function () {\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn this === window;\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tconst isNode = function () {\r\n\t\t\t\tif (process.versions.node != 'undefined'){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t};\r\n\r\n\t\t\tif (isBrowser()) {\r\n\t\t\t\treturn 'browser';\r\n\t\t\t} else if (isNode()) {\r\n\t\t\t\treturn 'node';\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * { Format }\r\n\t * Support helpers to format the message\r\n\t*/\r\n\tconst format = {\r\n\t\tmessage : function (messageContent, messageLevel) {\r\n\t\t\tconst timeAndDate = define.date() + ' - ' + define.time();\r\n\r\n\t\t\t// Format #{LogTime} [#{LogLevel}] #{LogMessage}\r\n\t\t\tlet formattedMessage;\r\n\r\n\t\t\tformattedMessage = '#' + '{' + timeAndDate + '}' + ' ';\r\n\t\t\tformattedMessage = formattedMessage + '[' + '#' + '{' + messageLevel + '}' + ']' + ' ';\r\n\t\t\tformattedMessage = formattedMessage + '#' + '{' + messageContent + '}';\r\n\r\n\t\t\treturn formattedMessage;\r\n\t\t},\r\n\r\n\t\tfilterSpecificFirstChar : function (input, charFilter) {\r\n\t\t\tif (input.charAt(0) === charFilter){\r\n\t\t\t\tinput = input.slice(1, input.length);\r\n\t\t\t}\r\n\t\t\treturn input;\r\n\t\t},\r\n\r\n\t\tfilterSpecificLastChar : function (input, charFilter) {\r\n\t\t\tif (input.charAt(input.length - 1) === charFilter){\r\n\t\t\t\tinput = input.slice(0, input.length - 1);\r\n\t\t\t}\r\n\t\t\treturn input;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * { Errors }\r\n\t * Support helpers for error handling\r\n\t*/\r\n\tconst error = {\r\n\t\tthrow : function (message) {\r\n\t\t\tthrow message;\r\n\t\t}\r\n\t};\r\n\r\n\treturn {\r\n\t\tcheck : check,\r\n\t\tdefine : define,\r\n\t\tvalidate : validate,\r\n\t\tformat : format,\r\n\t\terror : error\r\n\t};\r\n })();\r\n\r\n\r\n /**\r\n\t* Export\r\n\t*/\r\n module.exports = index;\r\n\n\n\n/** WEBPACK FOOTER **\n ** D:/1 - CORTANA/3 - Projects/18 - Coding/src/Web/Challenges/nexogen/project/code/build/src/helpers.js\n **/","/*******************************\r\n * [_consoleLogger.js]\r\n * Define the consoleLogger function\r\n ******************************/\r\n\r\n/**\r\n * { Dependencies }\r\n */\r\nimport helpers from './../helpers';\r\n\r\n /**\r\n * { Function }\r\n */\r\n const index = (function () {\r\n\r\n\t/**\r\n\t * { Log }\r\n\t * Log it with console.log\r\n\t*/\r\n\r\n\tconst log = (messageContent, messageLevel, callback) => {\r\n\r\n\t\tconst result = {\r\n\t\t\tmessageContent : messageContent\r\n\t\t};\r\n\r\n\t\t// Add colours\r\n\t\tconst styledMessageContent = '%c' + messageContent;\r\n\r\n\t\tswitch (messageLevel) {\r\n\t\t\tcase 'debug':\r\n\t\t\t\tconsole.debug(styledMessageContent, 'color: grey');\r\n\r\n\t\t\t\tcallback ? callback(result) : ' ';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'info':\r\n\t\t\t\tconsole.info(styledMessageContent, 'color: green');\r\n\r\n\t\t\t\tcallback ? callback(result) : ' ';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'error':\r\n\t\t\t\tconsole.error(styledMessageContent, 'color: red');\r\n\r\n\t\t\t\tcallback ? callback(result) : ' ';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\t//console.log('Sorry, the logger did not recognise this messageLevel for the console.log messageOutput');\r\n\r\n\t\t\t\tcallback ? callback('Sorry, the logger did not recognise this messageLevel in the console.log messageOutput type') : ' ';\r\n\t\t\t\thelpers.error.throw('Sorry, the logger did not recognise this messageLevel in the console.log messageOutput type');\r\n\t\t\t}\r\n\t};\r\n\r\n\treturn {\r\n\t\tlog : log\r\n\t};\r\n })();\r\n\r\n\r\n /**\r\n\t* Export\r\n\t*/\r\n module.exports = index;\r\n\n\n\n/** WEBPACK FOOTER **\n ** D:/1 - CORTANA/3 - Projects/18 - Coding/src/Web/Challenges/nexogen/project/code/build/src/loggers/consoleLogger.js\n **/","/*******************************\r\n * [_consoleLogger.js]\r\n * Define the consoleLogger function\r\n ******************************/\r\n\r\n/**\r\n * { Dependencies }\r\n */\r\n\timport helpers from './../helpers';\r\n\tconst fs = require('fs');\r\n\tconst path = require('path');\r\n\r\n /**\r\n * { Function }\r\n */\r\n const index = (function () {\r\n\r\n\t/**\r\n\t * { Log }\r\n\t * Log a file with fs\r\n\t*/\r\n\r\n\tconst log = (input, callback) => {\r\n\r\n\t\t// Support functions\r\n\r\n\t\t\t// Linebreak\r\n\t\t\tconst wrapLineBreak = (input) => {\r\n\t\t\t\t// Add a line break based on the OS (encoding is different on UNIX vs Windows)\r\n\t\t\t\tif (process.platform === 'win32'){\r\n\t\t\t\t\treturn input + '\\r\\n';\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn input + '\\n';\r\n\t\t\t};\r\n\r\n\t\t\t// Function to write file\r\n\t\t\tconst writeFile = (writePath, messageContent) => {\r\n\t\t\t\tfs.writeFile(writePath, messageContent, function (err) {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\treturn console.log(err);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//console.log('A new log file was saved!');\r\n\t\t\t\t\t//console.log(writePath, messageContent);\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\t// Append to file\r\n\t\t\tconst appendFile = (writePath, messageContent) => {\r\n\t\t\t\tfs.appendFile(writePath, messageContent, function (err) {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\treturn console.log(err);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//console.log('The log file was appended!');\r\n\t\t\t\t\t//console.log(writePath, messageContent);\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t// Definitions\r\n\t\tconst messageContent = input.messageContent,\r\n\t\t\t\tmessageLocationLookIn = input.messageLocationLookIn,\r\n\t\t\t\tmessageInBytes = helpers.check.stringInBytes(messageContent);\r\n\r\n\t\tlet writePath,\r\n\t\t\tmessageLocationPath;\r\n\r\n\t\tif (input.messageLocationPath) {\r\n\t\t\tmessageLocationPath = input.messageLocationPath + '/';\r\n\t\t} else {\r\n\t\t\tmessageLocationPath = '';\r\n\t\t}\r\n\r\n\t\t\t// Define LookIn (path base) and add subpath\r\n\t\t\tif (messageLocationLookIn == 'driveRoot'){\r\n\t\t\t\twritePath = '/';\r\n\r\n\t\t\t\tif (messageLocationPath != 'undefined'){\r\n\t\t\t\t\twritePath = writePath + messageLocationPath;\r\n\t\t\t\t}\r\n\t\t\t} else if (messageLocationLookIn == 'projectRoot'){\r\n\t\t\t\twritePath = './';\r\n\r\n\t\t\t\tif (messageLocationPath != 'undefined'){\r\n\t\t\t\t\twritePath = writePath + messageLocationPath;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Check if the folder exists\r\n\t\tif (!fs.existsSync(writePath)){\r\n\t\t\t\tfs.mkdirSync(writePath);\r\n\t\t}\r\n\r\n\t\t// Add a name to the logFile\r\n\t\t\t// First an inventory check, get a list of the current log files\r\n\t\t\t//let fileArray = fs.readdirSync(writePath, ['**.txt']),\r\n\r\n\t\t\tlet fileArray = fs.readdirSync(writePath),\r\n\t\t\t\tlogArray = [];\r\n\r\n\t\t\t// Take only files that are log files\r\n\t\t\tfor (let i in fileArray) {\r\n\t\t\t\tif (path.extname(fileArray[i]) === '.txt' && fileArray[i].includes('log')) {\r\n\t\t\t\t\tlogArray.push(fileArray[i]);\r\n\t\t\t\t\t//console.log('I am copying to the logArray: ', fileArray[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Define the total\r\n\t\t\tconst logsAmount = logArray.length;\r\n\r\n\t\t\t// Define a base file to verify the size of the mostRecentFile\r\n\t\t\tlet logFileExtention = '.txt',\r\n\t\t\t\t//mostRecentArchivedLogPath,\r\n\t\t\t\tbaseFileName = 'log' + logFileExtention,\r\n\t\t\t\tbaseLogPath = writePath + baseFileName,\r\n\t\t\t\tnewlyArchivedLogNumber = logsAmount + 1,\r\n\t\t\t\tnewlyArchivedLogFileName = 'log' + '.' + newlyArchivedLogNumber + logFileExtention,\r\n\t\t\t\tnewlyArchivedFileLogPath = writePath + newlyArchivedLogFileName,\r\n\t\t\t\tmessageWithLineBreak = wrapLineBreak(messageContent);\r\n\r\n\t\t\t// Is there a mostRecentFile or is this the first item?\r\n\t\t\tif (logsAmount != 0){\r\n\t\t\t\tconst fileStats = fs.statSync(baseLogPath),\r\n\t\t\t\t\t\tfileSizeInBytes = fileStats['size'];\r\n\r\n\t\t\t\t//console.log(fileSizeInBytes, messageInBytes);\r\n\t\t\t\t// Is the last log file still within 5000 bytes if I add this new logMessage?\r\n\t\t\t\tif (fileSizeInBytes + messageInBytes < 200){\r\n\t\t\t\t\t// Append to file\r\n\t\t\t\t\tappendFile(baseLogPath, messageWithLineBreak);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Rename the original log file to log.{incrementnumber}\r\n\t\t\t\t\tconst mutationStream = fs.createReadStream(baseLogPath);\r\n\r\n\t\t\t\t\tmutationStream.pipe(fs.createWriteStream(newlyArchivedFileLogPath));\r\n\r\n\t\t\t\t\tlet streamHadError = false;\r\n\r\n\t\t\t\t\tmutationStream.on('error', function (err) {\r\n\t\t\t\t\t\tstreamHadError = true;\r\n\t\t\t\t\t\tthrow new Error('Log renaming failed! ' + err);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// Now create a new log file\r\n\t\t\t\t\tmutationStream.on('close', function () {\r\n\t\t\t\t\t\tif (!streamHadError){\r\n\t\t\t\t\t\t\t// Make a new base log file\r\n\t\t\t\t\t\t\twriteFile(baseLogPath, messageWithLineBreak);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Define path for the first file\r\n\t\t\t\twriteFile(baseLogPath, messageWithLineBreak);\r\n\t\t\t}\r\n\r\n\r\n\t\t// Callback\r\n\t\tlet loggedPath = baseLogPath;\r\n\r\n\t\tif (loggedPath.charAt(0) === '.'){\r\n\t\t\tloggedPath = loggedPath.slice(1, loggedPath.length);\r\n\t\t}\r\n\r\n\t\t// Define the result for the callback\r\n\t\tloggedPath = messageLocationLookIn + loggedPath;\r\n\r\n\t\tconst result = {\r\n\t\t\tmessageContent : messageContent,\r\n\t\t\twritePath : loggedPath\r\n\t\t};\r\n\r\n\t\tcallback ? callback(result) : ' ';\r\n\t};\r\n\r\n\treturn {\r\n\t\tlog : log\r\n\t};\r\n })();\r\n\r\n\r\n /**\r\n* Export\r\n*/\r\n module.exports = index;\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** D:/1 - CORTANA/3 - Projects/18 - Coding/src/Web/Challenges/nexogen/project/code/build/src/loggers/fileLogger.js\n **/","module.exports = require(\"fs\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = require(\"path\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"path\"\n ** module id = 5\n ** module chunks = 0\n **/","/*******************************\r\n * [_streamLogger.js]\r\n * Define the streamLogger function\r\n ******************************/\r\n\r\n/**\r\n * { Dependencies }\r\n */\r\n\tconst Readable = require('stream').Readable;\r\n\r\n /**\r\n * { Function }\r\n */\r\n const index = (function () {\r\n\r\n\t/**\r\n\t * { Log }\r\n\t * Log it to a sourceStream via a pipe action\r\n\t*/\r\n\r\n\t// Stream Logger\r\n\tconst log = (input, callback) => {\r\n\r\n\t\t// Support functions\r\n\t\t\t// sparkles\r\n\r\n\t\t// Definitions\r\n\t\tconst messageContent = input.messageContent,\r\n\t\t\tmessageSourceStream = input.messageSourceStream;\r\n\r\n\r\n\t\t\t// Set up the read stream\r\n\t\t\tlet readStream = new Readable;\r\n\r\n\t\t\t// Push & Pipe\r\n\t\t\treadStream.push(messageContent);\r\n\t\t\treadStream.push(null);\r\n\t\t\treadStream.pipe(messageSourceStream);\r\n\r\n\t\t// Callback\r\n\t\tconst result = {\r\n\t\t\tmessageContent : messageContent\r\n\t\t};\r\n\r\n\t\tcallback ? callback(result) : ' ';\r\n\t};\r\n\r\n\treturn {\r\n\t\tlog : log\r\n\t};\r\n })();\r\n\r\n\r\n /**\r\n* Export\r\n*/\r\n module.exports = index;\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** D:/1 - CORTANA/3 - Projects/18 - Coding/src/Web/Challenges/nexogen/project/code/build/src/loggers/streamLogger.js\n **/","module.exports = require(\"stream\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"stream\"\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}